
--------------------------------------------------------------------
* Klient wypożycza pojazd ale nie ma ustalonej z góry daty oddania 
* klient ma maxymalna iloscc wypozyczonych pojazdów
* samochód moze byc wypożyczony tylko raz
* klient ma swoje dotychczasowe obroty (ile do tej pory nam zapłacił)
* typ klienta wyznacza implementacje pewnej metody -- typ  klienta może być zmieniany  (polimorfia)
* segment moze byc enumem 
* płapka w pojezdzie polega na tym jak to zaprojektujemy 
* typ klienta moze ulec zmianie w trakcie trwania aplikacji przez co moze zmienc sie upust w trakcie trwania wypozyczenia czyli ustawienia startowe utrzymuja sie do konca wypozyczenia (trzeba zapamietac cene) .
-------------------------testy---------------------------------------
* kazda metoda gdzie wnosi zmiany w modelu ma byc otestowana
* obsługa wyjątków , metoda ma miec ustawione wartosci domyslne
* testowanie wyjatkow w trakcie nowego wypozyczenia (przekroczenie uprawnien klienta, pojazdu)
* czy sprawdzenie mozliwosci wypzyczenia , testowanie tablicy 
------------------------------------------------------------------------
* zaslepkowanie (klasa ktora ma nam wytworzyc 5 kliento i 10 pojazdow na sztywno i ma wygenerowac 7 wypozyczeń   'losowy czas do tyg wstecz')\
* po przezłaniu danych strumieniem trzeba sprawdzic czy bylo wykonane poprawnie
